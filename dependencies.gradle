project.ext{
    //Android
    androidBuildToolsVersion    = "28.0.3"
    androidMinSdkVersion        = 21
    androidTargetSdkVersion     = 26
    androidCompileSdkVersion    = 28
    kotlin_version              = "1.3.61"

    //Libraries
    kotlinVersion = '1.3.61'
    rxKotlinVersion = '2.3.0'
    rxKotlinVersion1 = '2.4.0'

    axAnnotation = '1.0.1'
    axRecyclerView = '1.1.0-alpha01'
    axCorektx = '1.1.0-alpha03'
    materialVersion = '1.1.0-alpha02'
    roomVersion = '2.2.2'
    lifecycleVersion = '2.1.0-alpha01'
    espressoVersion = '3.1.1'
    constraintLayoutVersion = '2.0.0-alpha3'
    axAppcompat = "1.1.0"
    archCoreTestingVersion = "2.1.0"
    lifecycle_version = "2.2.0"
    arch_version = "2.1.0"


    supportLibararyVersion = "28.0.0"
    timberVersion = "4.5.1"
    glideVersion = "4.0.0"
    glassFishVersion = '10.0-b28'

    rxJavaVersion = "2.0.2"
    javaxAnnotationVersion = "1.0"
    javaxInjectVersion = "1"
    axAnnotation = '1.0.1'
    daggerVersion = '2.26'
    gsonVersion = '2.8.5'
    okhttpVersion = '3.12.0'
    retrofitVersion = '2.4.0'
    rxAndroidVersion = '2.0.1'
    androidAnnotationsVersion = '21.0.3'
    rxIdler = '0.9.0'

    //Testing
    jUnitVersion = "4.12"
    assertJVersion = "3.8.0"
    mockitoVersion = "2.2.0"
    mockitoKotlinVersion = '2.2.0'
    mockitoAndroidVersion = '2.23.4'
    robolectricVersion = '4.3.1'

    axTestRunner = '1.1.1'
    axTestRules = '1.1.1'
    axTestCore = '1.1.0'
    axTestJunit = '1.1.0'
    javapoet = "1.7.0"

    domainDependencies = [
            kotlin                : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            javaAnnotation      : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaInject          : "javax.inject:javax.inject:${javaxInjectVersion}",
            rxjava              : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    ]

    domainTestDependencies = [
            junit       : "junit:junit:${jUnitVersion}",
            assertj     : "org.assertj:assertj-core:${assertJVersion}",
            mockito     : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}"
    ]

    dataDependencies = [
            kotlin          : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            rxKotlin        : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion1}",
            rxJava          : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            javaxAnnotations: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject     : "javax.inject:javax.inject:${javaxInjectVersion}"
    ]

    dataTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertJ      : "org.assertj:assertj-core:${assertJVersion}",
            mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric  : "org.robolectric:robolectric:${robolectricVersion}"
    ]

    remoteDependencies = [
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion",
            rxJava            : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
            gson              : "com.google.code.gson:gson:$gsonVersion",
            javaxAnnotations  : "javax.annotation:jsr250-api:$javaxAnnotationVersion",
            javaxInject       : "javax.inject:javax.inject:$javaxInjectVersion",
            androidAnnotations: "androidx.annotation:annotation:$axAnnotation",
            okhttp            : "com.squareup.okhttp3:okhttp:$okhttpVersion",
            okhttpInterceptor : "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
            retrofit          : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            retrofitConverter : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    ]

    remoteTestDependencies = [
            junit        : "junit:junit:$jUnitVersion",
            assertJ      : "org.assertj:assertj-core:$assertJVersion",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion",
            mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
            testRunner   : "androidx.test:runner:$axTestRunner",
            testRules    : "androidx.test:rules:$axTestRules"
    ]

    cacheDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:$daggerVersion",
            dagger            : "com.google.dagger:dagger:$daggerVersion",
            javapoet          : "com.squareup:javapoet:$javapoet",
            gson              : "com.google.code.gson:gson:$gsonVersion",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            javaxAnnotations  : "javax.annotation:jsr250-api:$javaxAnnotationVersion",
            javaxInject       : "javax.inject:javax.inject:$javaxInjectVersion",
            androidAnnotations: "androidx.annotation:annotation:$axAnnotation",
            roomRuntime       : "androidx.room:room-runtime:$roomVersion",
            roomCompiler      : "androidx.room:room-compiler:$roomVersion",
            roomRxJva         : "androidx.room:room-rxjava2:$roomVersion",
            appCompat         : "androidx.appcompat:appcompat:$axAppcompat"
    ]

    cacheTestDependencies = [
            junit        : "junit:junit:$jUnitVersion",
            assertJ      : "org.assertj:assertj-core:$assertJVersion",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion",
            mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
            roomTesting  : "androidx.room:room-testing:$roomVersion",
            archTesting  : "androidx.arch.core:core-testing:$archCoreTestingVersion",
            testRunner   : "androidx.test:runner:$axTestRunner",
            testRules    : "androidx.test:rules:$axTestRules",
            testCore     : "androidx.test:core:$axTestCore",
            robolectric  : "org.robolectric:robolectric:$robolectricVersion"
    ]

    presentationDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            javapoet          : "com.squareup:javapoet:$javapoet",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            rxAndroid:          "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            archViewModel:      "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
            archLiveData:       "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
            archCompiler:       "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    ]

    presentationTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}"
    ]

    mobileUIDependencies = [
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion",
            dagger                : "com.google.dagger:dagger:$daggerVersion",
            javapoet              : "com.squareup:javapoet:$javapoet",
            ktx                   : "androidx.core:core-ktx:$axCorektx",
            rxKotlin              : "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion",
            rxJava                : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
            kotlin                : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            rxAndroid             : "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
            glide                 : "com.github.bumptech.glide:glide:$glideVersion",
            glideCompiler         : "com.github.bumptech.glide:compiler:$glideVersion",
            javaxAnnotations      : "javax.annotation:jsr250-api:$javaxAnnotationVersion",
            javaxInject           : "javax.inject:javax.inject:$javaxInjectVersion",
            androidAnnotations    : "androidx.annotation:annotation:$axAnnotation",
            appCompat             : "androidx.appcompat:appcompat:$axAppcompat",
            recyclerView          : "androidx.recyclerview:recyclerview:$axRecyclerView",
            design                : "com.google.android.material:material:$materialVersion",
            timber                : "com.jakewharton.timber:timber:$timberVersion",
            daggerAndroid         : "com.google.dagger:dagger-android-support:$daggerVersion",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",
            glassfishAnnotation   : "org.glassfish:javax.annotation:$glassFishVersion",
            lifecycleRuntime      : "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion",
            lifecycleExtensions   : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
            lifecycleCommon       : "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion",
            roomRuntime           : "androidx.room:room-runtime:$roomVersion",
            roomCompiler          : "androidx.room:room-compiler:$roomVersion",
            roomRxJva             : "androidx.room:room-rxjava2:$roomVersion",
            constraintLayout      : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    ]

    mobileUITestDependencies = [
            dagger                : "com.google.dagger:dagger:$daggerVersion",
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion",
            daggerAndroid         : "com.google.dagger:dagger-android-support:$daggerVersion",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",
            junit                 : "junit:junit:$jUnitVersion",
            assertJ               : "org.assertj:assertj-core:$assertJVersion",
            kotlinJUnit           : "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion",
            mockitoKotlin         : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
            testRunner            : "androidx.test:runner:$axTestRunner",
            testRules             : "androidx.test:rules:$axTestRules",
            testCore              : "androidx.test:core:$axTestCore",
            testExtJunit          : "androidx.test.ext:junit:$axTestJunit",
            rxIdler               : "com.squareup.rx.idler:rx2-idler:$rxIdler",
            mockitoAndroid        : "org.mockito:mockito-android:$mockitoAndroidVersion",
            robolectric           : "org.robolectric:robolectric:$robolectricVersion",
            espressoCore          : "androidx.test.espresso:espresso-core:$espressoVersion",
            espressoIntents       : "androidx.test.espresso:espresso-intents:$espressoVersion",
            espressoContrib       : "androidx.test.espresso:espresso-contrib:$espressoVersion"
    ]
}